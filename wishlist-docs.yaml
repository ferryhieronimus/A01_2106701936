openapi: 3.0.0
info:
  title: Wishlist Service API
  description: Wishlist management microservice for AAW Marketplace
  version: 1.0.0
  contact:
    name: AAW Team

servers:
  - url: http://localhost:8004
    description: Local development server

paths:
  /api/wishlist:
    get:
      summary: Get all user wishlists
      tags:
        - Wishlists
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of user wishlists
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Wishlist'
        '401':
          description: Unauthorized

    post:
      summary: Create new wishlist
      tags:
        - Wishlists
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWishlistRequest'
      responses:
        '201':
          description: Wishlist created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wishlist'
        '401':
          description: Unauthorized

  /api/wishlist/{id}:
    get:
      summary: Get wishlist by ID
      tags:
        - Wishlists
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Wishlist details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wishlist'
        '401':
          description: Unauthorized
        '404':
          description: Wishlist not found

    put:
      summary: Update wishlist
      tags:
        - Wishlists
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWishlistRequest'
      responses:
        '200':
          description: Wishlist updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wishlist'
        '401':
          description: Unauthorized
        '404':
          description: Wishlist not found

    delete:
      summary: Delete wishlist
      tags:
        - Wishlists
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Wishlist deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Wishlist deleted successfully"
        '401':
          description: Unauthorized
        '404':
          description: Wishlist not found

  /api/wishlist/add:
    post:
      summary: Add product to wishlist
      tags:
        - Wishlist Products
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProductToWishlistRequest'
      responses:
        '200':
          description: Product added to wishlist successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product added to wishlist successfully"
        '401':
          description: Unauthorized
        '404':
          description: Wishlist or product not found

  /api/wishlist/remove:
    delete:
      summary: Remove product from wishlist
      tags:
        - Wishlist Products
      security:
        - BearerAuth: []
      parameters:
        - name: wishlist_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: product_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Product removed from wishlist successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product removed from wishlist successfully"
        '401':
          description: Unauthorized
        '404':
          description: Product not found in wishlist

components:
  schemas:
    Wishlist:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        products:
          type: array
          items:
            $ref: '#/components/schemas/WishlistProduct'

    WishlistProduct:
      type: object
      properties:
        product_id:
          type: string
          format: uuid
        added_at:
          type: string
          format: date-time

    CreateWishlistRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string

    UpdateWishlistRequest:
      type: object
      properties:
        name:
          type: string

    AddProductToWishlistRequest:
      type: object
      required:
        - wishlist_id
        - product_id
      properties:
        wishlist_id:
          type: string
          format: uuid
        product_id:
          type: string
          format: uuid

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT