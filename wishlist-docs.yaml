openapi: 3.0.0
info:
  title: Wishlist Service API
  description: Wishlist management microservice for AAW Marketplace
  version: 1.0.0
  contact:
    name: AAW Team

servers:
  - url: http://localhost:8004
    description: Local development server

paths:
  /api/wishlist:
    get:
      summary: Get all user wishlists
      tags:
        - Wishlists
      security:
        - BearerAuth: []
      responses:
        "200":
          description: List of user wishlists
        "401":
          description: Unauthorized
        "500":
          description: Internal server error

    post:
      summary: Create new wishlist
      tags:
        - Wishlists
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWishlistRequest"
      responses:
        "201":
          description: Wishlist created successfully
        "401":
          description: Unauthorized
        "500":
          description: Internal server error

  /api/wishlist/{id}:
    get:
      summary: Get wishlist by ID
      tags:
        - Wishlists
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Wishlist details
        "401":
          description: Unauthorized
        "500":
          description: Internal server error

    put:
      summary: Update wishlist
      tags:
        - Wishlists
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWishlistRequest"
      responses:
        "200":
          description: Wishlist updated successfully
        "401":
          description: Unauthorized
        "500":
          description: Internal server error

    delete:
      summary: Delete wishlist
      tags:
        - Wishlists
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Wishlist deleted successfully
        "401":
          description: Unauthorized
        "500":
          description: Internal server error

  /api/wishlist/add:
    post:
      summary: Add product to wishlist
      tags:
        - Wishlist Products
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddProductToWishlistRequest"
      responses:
        "200":
          description: Product added to wishlist successfully
        "401":
          description: Unauthorized
        "500":
          description: Internal server error

  /api/wishlist/remove:
    delete:
      summary: Remove product from wishlist
      tags:
        - Wishlist Products
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: string
                  format: uuid
      responses:
        "200":
          description: Product removed from wishlist successfully
        "401":
          description: Unauthorized
        "500":
          description: Internal server error

  /api/wishlist/v1/remove:
    delete:
      summary: Remove product from wishlist
      tags:
        - Wishlist Products
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: string
                  format: uuid
      responses:
        "204":
          description: Product removed from wishlist successfully
        "401":
          description: Unauthorized
        "500":
          description: Internal server error

  /api/wishlist/v1/{id}:
    delete:
      summary: Delete wishlist
      tags:
        - Wishlists
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Wishlist deleted successfully
        "401":
          description: Unauthorized
        "500":
          description: Internal server error

components:
  schemas:
    Wishlist:
      type: object
      properties:
        id:
          type: string
          format: uuid
        tenant_id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        name:
          type: string
        products:
          type: array
          items:
            $ref: "#/components/schemas/WishlistDetail"

    WishlistDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
        wishlist_id:
          type: string
          format: uuid
        product_id:
          type: string
          format: uuid

    CreateWishlistRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string

    UpdateWishlistRequest:
      type: object
      properties:
        name:
          type: string

    AddProductToWishlistRequest:
      type: object
      required:
        - wishlist_id
        - product_id
      properties:
        wishlist_id:
          type: string
          format: uuid
        product_id:
          type: string
          format: uuid

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
