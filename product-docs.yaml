openapi: 3.0.0
info:
  title: Product Service API
  description: Product management microservice for AAW Marketplace
  version: 1.0.0
  contact:
    name: AAW Team

servers:
  - url: http://localhost:8002
    description: Local development server

paths:
  /api/product:
    get:
      summary: Get all products
      tags:
        - Products
      responses:
        '200':
          description: List of products
        '500':
          description: Internal server error
    post:
      summary: Create new product
      tags:
        - Products
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
      responses:
        '201':
          description: Product created successfully
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /api/product/many:
    post:
      summary: Get multiple products by IDs
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - productIds
              properties:
                productIds:
                  type: array
                  items:
                    type: string
                    format: uuid
      responses:
        '200':
          description: List of products
        '500':
          description: Internal server error

  /api/product/{id}:
    get:
      summary: Get product by ID
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Product details
        '404':
          description: Product not found
        '500':
          description: Internal server error
    put:
      summary: Update product
      tags:
        - Products
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
      responses:
        '200':
          description: Product updated successfully
        '401':
          description: Unauthorized
        '404':
          description: Product not found
        '500':
          description: Internal server error
    delete:
      summary: Delete product
      tags:
        - Products
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Product deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Product not found
        '500':
          description: Internal server error

  /api/product/category:
    get:
      summary: Get all categories
      tags:
        - Categories
      responses:
        '200':
          description: List of categories
        '500':
          description: Internal server error
    post:
      summary: Create new category
      tags:
        - Categories
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoryRequest'
      responses:
        '201':
          description: Category created successfully
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /api/product/category/{category_id}:
    get:
      summary: Get products by category
      tags:
        - Categories
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: List of products in category
        '404':
          description: Category not found
        '500':
          description: Internal server error
    put:
      summary: Update category
      tags:
        - Categories
      security:
        - BearerAuth: []
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditCategoryRequest'
      responses:
        '200':
          description: Category updated successfully
        '401':
          description: Unauthorized
        '404':
          description: Category not found
        '500':
          description: Internal server error

    delete:
      summary: Delete category
      tags:
        - Categories
      security:
        - BearerAuth: []
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Category deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Category not found
        '500':
          description: Internal server error

components:
  schemas:
    CreateProductRequest:
      type: object
      required:
        - name
        - price
        - quantity_available
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
        quantity_available:
          type: number
        category_id:
          type: string
          format: uuid

    UpdateProductRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
        quantity_available:
          type: number
        category_id:
          type: string
          format: uuid
    CreateCategoryRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        description:
          type: string

    EditCategoryRequest:
      type: object
      properties:
        name:
          type: string

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT