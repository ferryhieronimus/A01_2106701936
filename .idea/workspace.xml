<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="dde14760-027d-4d8a-a539-e0b367279c71" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/authentication/.dockerignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/authentication/.env.example" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/authentication/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/authentication/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/authentication/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/authentication/docker-compose.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/authentication/drizzle.config.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/authentication/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/authentication/pnpm-lock.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/authentication/src/auth/dao/getUserById.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/authentication/src/auth/dao/getUserByUsername.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/authentication/src/auth/dao/insertNewUser.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/authentication/src/auth/services/login.service.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/authentication/src/auth/services/register.service.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/authentication/src/generateAdminToken.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/authentication/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/orders/.dockerignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/orders/.env.example" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/orders/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/orders/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/orders/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/orders/docker-compose.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/orders/drizzle.config.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/orders/drizzle/meta/0000_snapshot.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/orders/drizzle/meta/_journal.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/orders/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/orders/pnpm-lock.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/orders/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/.dockerignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/.env.example" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/docker-compose.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/drizzle.config.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/drizzle/meta/0000_snapshot.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/drizzle/meta/_journal.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/pnpm-lock.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/src/commons/patterns/exceptions.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/src/commons/patterns/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/src/db/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/src/db/migrate.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/src/middleware/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/src/middleware/validate.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/src/product/dao/createNewCategory.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/src/product/dao/createNewProduct.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/src/product/dao/deleteCategoryById.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/src/product/dao/deleteProductById.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/src/product/dao/editCategoryById.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/src/product/dao/editProductById.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/src/product/dao/getAllCategoriesByTenantId.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/src/product/dao/getAllProductsByTenantId.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/src/product/dao/getManyProductDatasById.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/src/product/dao/getProductByCategory.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/src/product/dao/getProductById.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/src/product/services/createCategory.service.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/src/product/services/createProduct.service.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/src/server.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/products/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tenant/.dockerignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tenant/.env.example" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tenant/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tenant/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tenant/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tenant/docker-compose.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tenant/drizzle.config.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tenant/drizzle/meta/0000_snapshot.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tenant/drizzle/meta/_journal.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tenant/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tenant/pnpm-lock.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tenant/src/commons/patterns/exceptions.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tenant/src/commons/patterns/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tenant/src/commons/product.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tenant/src/commons/user.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tenant/src/db/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tenant/src/db/migrate.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tenant/src/middleware/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tenant/src/middleware/validate.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tenant/src/server.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tenant/src/tenant/dao/createNewTenant.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tenant/src/tenant/dao/deleteTenantById.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tenant/src/tenant/dao/editTenantById.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tenant/src/tenant/dao/getTenantById.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tenant/tsconfig.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/.dockerignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/.env.example" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/docker-compose.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/drizzle.config.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/drizzle/meta/0000_snapshot.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/drizzle/meta/_journal.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/pnpm-lock.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/src/commons/patterns/exceptions.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/src/commons/patterns/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/src/db/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/src/db/migrate.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/src/middleware/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/src/middleware/validate.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/src/server.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/src/wishlist/dao/addProductToWishlist.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/src/wishlist/dao/createWishlist.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/src/wishlist/dao/deleteWishlistById.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/src/wishlist/dao/getAllUserWishlist.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/src/wishlist/dao/getWishlistById.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/src/wishlist/dao/getWishlistDetailById.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/src/wishlist/dao/getWishlistDetailByWishlistId.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/src/wishlist/dao/removeProductFromWishlist.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/src/wishlist/dao/updateWishlistById.dao.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/src/wishlist/services/addProductToWishlist.service.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/src/wishlist/services/createWishlist.service.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/wishlist/tsconfig.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.dockerignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.env.example" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Dockerfile" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/db/schema/auth/users.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/db/schema/orders/cart.ts" beforeDir="false" afterPath="$PROJECT_DIR$/orders/db/schema/cart.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/db/schema/orders/order.ts" beforeDir="false" afterPath="$PROJECT_DIR$/orders/db/schema/order.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/db/schema/orders/orderDetail.ts" beforeDir="false" afterPath="$PROJECT_DIR$/orders/db/schema/orderDetail.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/db/schema/orders/payment.ts" beforeDir="false" afterPath="$PROJECT_DIR$/orders/db/schema/payment.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/db/schema/products/categories.ts" beforeDir="false" afterPath="$PROJECT_DIR$/products/db/schema/categories.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/db/schema/products/products.ts" beforeDir="false" afterPath="$PROJECT_DIR$/products/db/schema/products.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/db/schema/tenant/tenantDetails.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tenant/db/schema/tenantDetails.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/db/schema/tenant/tenants.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tenant/db/schema/tenants.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/db/schema/wishlist/wishlist.ts" beforeDir="false" afterPath="$PROJECT_DIR$/wishlist/db/schema/wishlist.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/db/schema/wishlist/wishlistDetail.ts" beforeDir="false" afterPath="$PROJECT_DIR$/wishlist/db/schema/wishlistDetail.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/drizzle.config.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/drizzle/0000_bent_donald_blake.sql" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/drizzle/meta/0000_snapshot.json" beforeDir="false" afterPath="$PROJECT_DIR$/authentication/drizzle/meta/0000_snapshot.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/drizzle/meta/_journal.json" beforeDir="false" afterPath="$PROJECT_DIR$/authentication/drizzle/meta/_journal.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pnpm-lock.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/auth/dao/getUserById.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/auth/dao/getUserByUsername.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/auth/dao/insertNewUser.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/auth/services/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/authentication/src/auth/services/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/auth/services/login.service.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/auth/services/register.service.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/auth/services/verifyAdminToken.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/authentication/src/auth/services/verifyAdminToken.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/auth/services/verifyToken.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/authentication/src/auth/services/verifyToken.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/auth/user.handler.ts" beforeDir="false" afterPath="$PROJECT_DIR$/authentication/src/auth/user.handler.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/auth/user.routes.ts" beforeDir="false" afterPath="$PROJECT_DIR$/authentication/src/auth/user.routes.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/auth/validation/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/authentication/src/auth/validation/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/auth/validation/login.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/authentication/src/auth/validation/login.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/auth/validation/register.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/authentication/src/auth/validation/register.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/auth/validation/verifyAdminToken.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/authentication/src/auth/validation/verifyAdminToken.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/auth/validation/verifyToken.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/authentication/src/auth/validation/verifyToken.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/db/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/authentication/src/db/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/db/migrate.ts" beforeDir="false" afterPath="$PROJECT_DIR$/authentication/src/db/migrate.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/generateAdminToken.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/cart/cart.handler.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/cart/cart.routes.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/cart/dao/addItemToCart.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/cart/dao/deleteCartItem.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/cart/dao/deleteCartItemByProductId.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/cart/dao/editCartDataById.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/cart/dao/getAllCartItems.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/cart/services/addItemToCart.service.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/cart/services/deleteCartItem.service.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/cart/services/editCartItem.service.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/cart/services/getAllCartItems.service.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/cart/services/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/cart/validation/addItemToCart.schema.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/cart/validation/deleteCartItem.schema.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/cart/validation/editCartItem.schema.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/cart/validation/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/order/dao/cancelOrder.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/order/dao/createOrder.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/order/dao/getAllOrders.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/order/dao/getOrderById.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/order/dao/getOrderDetail.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/order/dao/payOrder.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/order/order.handler.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/order/order.routes.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/order/services/cancelOrder.service.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/order/services/getAllOrders.service.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/order/services/getOrderDetail.service.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/order/services/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/order/services/payOrder.service.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/order/services/placeOrder.service.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/order/validation/cancelOrder.schema.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/order/validation/getOrderDetail.schema.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/order/validation/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/order/validation/payOrder.schema.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/orders/order/validation/placeOrder.schema.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/dao/createNewCategory.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/dao/createNewProduct.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/dao/deleteCategoryById.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/dao/deleteProductById.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/dao/editCategoryById.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/dao/editProductById.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/dao/getAllCategoriesByTenantId.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/dao/getAllProductsByTenantId.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/dao/getManyProductDatasById.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/dao/getProductByCategory.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/dao/getProductById.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/product.handler.ts" beforeDir="false" afterPath="$PROJECT_DIR$/products/src/product/product.handler.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/product.routes.ts" beforeDir="false" afterPath="$PROJECT_DIR$/products/src/product/product.routes.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/services/createCategory.service.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/services/createProduct.service.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/services/deleteCategory.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/products/src/product/services/deleteCategory.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/services/deleteProduct.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/products/src/product/services/deleteProduct.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/services/editCategory.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/products/src/product/services/editCategory.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/services/editProduct.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/products/src/product/services/editProduct.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/services/getAllCategories.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/products/src/product/services/getAllCategories.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/services/getAllProducts.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/products/src/product/services/getAllProducts.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/services/getManyProductDatasById.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/products/src/product/services/getManyProductDatasById.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/services/getProductByCategory.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/products/src/product/services/getProductByCategory.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/services/getProductById.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/products/src/product/services/getProductById.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/services/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/products/src/product/services/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/validation/createCategory.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/products/src/product/validation/createCategory.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/validation/createProduct.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/products/src/product/validation/createProduct.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/validation/deleteCategory.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/products/src/product/validation/deleteCategory.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/validation/deleteProduct.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/products/src/product/validation/deleteProduct.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/validation/editCategory.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/products/src/product/validation/editCategory.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/validation/editProduct.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/products/src/product/validation/editProduct.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/validation/getManyProductDatasById.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/products/src/product/validation/getManyProductDatasById.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/validation/getProductByCategory.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/products/src/product/validation/getProductByCategory.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/validation/getProductById.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/products/src/product/validation/getProductById.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/product/validation/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/products/src/product/validation/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/server.ts" beforeDir="false" afterPath="$PROJECT_DIR$/authentication/src/server.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/shared/commons/patterns/exceptions.ts" beforeDir="false" afterPath="$PROJECT_DIR$/authentication/src/commons/patterns/exceptions.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/shared/commons/patterns/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/authentication/src/commons/patterns/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/shared/middleware/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/authentication/src/middleware/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/shared/middleware/validate.ts" beforeDir="false" afterPath="$PROJECT_DIR$/authentication/src/middleware/validate.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/shared/middleware/verifyJWT.ts" beforeDir="false" afterPath="$PROJECT_DIR$/wishlist/src/middleware/verifyJWT.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/shared/middleware/verifyJWTProduct.ts" beforeDir="false" afterPath="$PROJECT_DIR$/products/src/middleware/verifyJWTProduct.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/shared/middleware/verifyJWTTenant.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tenant/src/middleware/verifyJWTTenant.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/shared/types/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/shared/types/product.ts" beforeDir="false" afterPath="$PROJECT_DIR$/orders/src/commons/product.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/shared/types/user.ts" beforeDir="false" afterPath="$PROJECT_DIR$/orders/src/commons/user.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tenant/dao/createNewTenant.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tenant/dao/deleteTenantById.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tenant/dao/editTenantById.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tenant/dao/getTenantById.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tenant/services/createTenant.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tenant/src/tenant/services/createTenant.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tenant/services/deleteTenant.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tenant/src/tenant/services/deleteTenant.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tenant/services/editTenant.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tenant/src/tenant/services/editTenant.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tenant/services/getTenant.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tenant/src/tenant/services/getTenant.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tenant/services/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tenant/src/tenant/services/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tenant/tenant.handler.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tenant/src/tenant/tenant.handler.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tenant/tenant.routes.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tenant/src/tenant/tenant.routes.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tenant/validation/createTenant.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tenant/src/tenant/validation/createTenant.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tenant/validation/deleteTenant.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tenant/src/tenant/validation/deleteTenant.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tenant/validation/editTenant.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tenant/src/tenant/validation/editTenant.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tenant/validation/getTenant.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tenant/src/tenant/validation/getTenant.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tenant/validation/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/tenant/src/tenant/validation/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/dao/addProductToWishlist.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/dao/createWishlist.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/dao/deleteWishlistById.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/dao/getAllUserWishlist.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/dao/getWishlistById.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/dao/getWishlistDetailById.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/dao/getWishlistDetailByWishlistId.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/dao/removeProductFromWishlist.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/dao/updateWishlistById.dao.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/services/addProductToWishlist.service.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/services/createWishlist.service.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/services/deleteWishlist.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/wishlist/src/wishlist/services/deleteWishlist.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/services/getAllUserWishlist.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/wishlist/src/wishlist/services/getAllUserWishlist.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/services/getWishlistById.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/wishlist/src/wishlist/services/getWishlistById.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/services/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/wishlist/src/wishlist/services/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/services/removeProductFromWishlist.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/wishlist/src/wishlist/services/removeProductFromWishlist.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/services/updateWishlist.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/wishlist/src/wishlist/services/updateWishlist.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/validation/addProductToWishlist.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/wishlist/src/wishlist/validation/addProductToWishlist.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/validation/createWishlist.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/wishlist/src/wishlist/validation/createWishlist.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/validation/deleteWishlist.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/wishlist/src/wishlist/validation/deleteWishlist.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/validation/getWishlistById.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/wishlist/src/wishlist/validation/getWishlistById.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/validation/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/wishlist/src/wishlist/validation/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/validation/removeProductFromWishlist.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/wishlist/src/wishlist/validation/removeProductFromWishlist.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/validation/updateWishlist.schema.ts" beforeDir="false" afterPath="$PROJECT_DIR$/wishlist/src/wishlist/validation/updateWishlist.schema.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/wishlist.handler.ts" beforeDir="false" afterPath="$PROJECT_DIR$/wishlist/src/wishlist/wishlist.handler.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/wishlist/wishlist.routes.ts" beforeDir="false" afterPath="$PROJECT_DIR$/wishlist/src/wishlist/wishlist.routes.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tsconfig.json" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2tJioddQgz2ItVz7rsoEB7cgFE0" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/ferry/Documents/Universitas Indonesia/Semester 8/aaw/aaw-marketplace-microservices/orders/src/commons&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;pnpm&quot;,
    &quot;ts.external.directory.path&quot;: &quot;/Users/ferry/Documents/Universitas Indonesia/Semester 8/aaw/aaw-marketplace-microservices/products/node_modules/typescript/lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/orders/src/commons" />
      <recent name="$PROJECT_DIR$/tenant/src/commons" />
      <recent name="$PROJECT_DIR$/wishlist" />
      <recent name="$PROJECT_DIR$/tenant" />
      <recent name="$PROJECT_DIR$/products" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/tenant/src" />
      <recent name="$PROJECT_DIR$/tenant/db/schema" />
      <recent name="$PROJECT_DIR$/orders/src" />
      <recent name="$PROJECT_DIR$/orders/db/schema" />
      <recent name="$PROJECT_DIR$/authentication/src" />
    </key>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-410509235cf1-JavaScript-WS-242.20224.342" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="dde14760-027d-4d8a-a539-e0b367279c71" name="Changes" comment="" />
      <created>1740076754447</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1740076754447</updated>
      <workItem from="1740076755554" duration="8100000" />
      <workItem from="1740113132240" duration="2387000" />
      <workItem from="1740130527863" duration="713000" />
      <workItem from="1740131247423" duration="129000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/orders/src/order/dao/payOrder.dao.ts</url>
          <option name="timeStamp" value="16" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/products/src/product/services/deleteProduct.service.ts</url>
          <line>12</line>
          <option name="timeStamp" value="20" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>